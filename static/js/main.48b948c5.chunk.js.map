{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextField/TextField.tsx","components/NewMovie/NewMovie.tsx","data/constants.ts","App.tsx","index.tsx"],"names":["MovieCard","_ref","movie","_jsxs","className","children","_jsx","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","MovieField","TextField","name","value","_ref$label","label","_ref$required","required","_ref$onChange","onChange","_ref$validateCustom","validateCustom","_useState","useState","concat","Math","random","toString","slice","id","_slicedToArray","_useState3","_useState4","touched","setToched","_useState5","_useState6","customValid","setCustomValid","hasError","checkCustom","target","onTextFieldChange","htmlFor","classNames","type","placeholder","event","onBlur","PATTERN","NewMovie","onAdd","_useState2","count","setCount","emptyMovie","newMovie","setNewMovie","isAddDisabled","setIsAddDisabled","useEffect","Object","entries","some","_ref2","_ref3","key","_ref4","_dataset$cy","dataset","cy","split","match","_ref5","_ref6","str","replace","charAt","toUpperCase","parts","join","generateLabel","newValue","targetKey","prev","movieKey","movieCopy","_objectSpread","handleChange","disabled","onClick","e","preventDefault","App","moviesFromServer","moviesToRender","setMoviesToRender","_toConsumableArray","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.48b948c5.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movie-card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import classNames from 'classnames';\nimport React, { useState } from 'react';\n\ntype Props = {\n  name: string,\n  value: string,\n  label?: string,\n  required?: boolean,\n  onChange?: (newValue: string) => void,\n  validateCustom?: (target: HTMLInputElement) => boolean,\n};\n\nfunction getRandomDigits() {\n  return Math.random().toString().slice(2);\n}\n\nexport const TextField: React.FC<Props> = ({\n  name,\n  value,\n  label = name,\n  required = false,\n  onChange = () => {},\n  validateCustom = () => true,\n}) => {\n  const [id] = useState(() => `${name}-${getRandomDigits()}`);\n  const [touched, setToched] = useState(false);\n  const [customValid, setCustomValid] = useState(true);\n\n  const hasError = (touched && required && !value) || !customValid;\n\n  const checkCustom = (target: HTMLInputElement) => {\n    setCustomValid(validateCustom(target));\n  };\n\n  const onTextFieldChange = (target: EventTarget & HTMLInputElement) => {\n    onChange(target.value);\n    checkCustom(target);\n    setCustomValid(true);\n  };\n\n  return (\n    <div className=\"field\">\n      <label className=\"label\" htmlFor={id}>\n        {label}\n      </label>\n\n      <div className=\"control\">\n        <input\n          id={id}\n          data-cy={`movie-${name}`}\n          className={classNames('input', {\n            'is-danger': hasError,\n          })}\n          type=\"text\"\n          placeholder={`Enter ${label}`}\n          value={value}\n          onChange={event => onTextFieldChange(event.target)}\n          onBlur={(event) => {\n            setToched(true);\n            checkCustom(event.target);\n          }}\n        />\n      </div>\n\n      {hasError && (\n        <p className=\"help is-danger\">\n          {value\n            ? `${label} has to meet all requirements`\n            : `${label} is required`}\n        </p>\n      )}\n    </div>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { TextField } from '../TextField';\nimport { Movie } from '../../types/Movie';\nimport { PATTERN } from '../../data/constants';\n\nenum MovieField {\n  title = 'title',\n  description = 'description',\n  imgUrl = 'imgUrl',\n  imdbUrl = 'imdbUrl',\n  imdbId = 'imdbId',\n}\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\n\nexport const NewMovie: React.FC<Props> = ({ onAdd }) => {\n  const [count, setCount] = useState(0);\n  const emptyMovie = {\n    title: '',\n    description: '',\n    imgUrl: '',\n    imdbUrl: '',\n    imdbId: '',\n  };\n  const [newMovie, setNewMovie] = useState(emptyMovie);\n  const [isAddDisabled, setIsAddDisabled] = useState(true);\n\n  useEffect(() => {\n    setIsAddDisabled(() => {\n      return Object.entries(newMovie).some(([key, value]) => {\n        return key === MovieField.description ? false : !value;\n      });\n    });\n  }, [newMovie]);\n\n  const generateLabel = (str: string) => {\n    let label = str.replace(/([A-Z])/g, ' $1');\n\n    label = label.charAt(0).toUpperCase() + label.slice(1);\n\n    if (label.split(' ')[1]) {\n      const parts = label.split(' ');\n\n      parts[1] = parts[1].toUpperCase();\n      label = parts.join(' ');\n    }\n\n    return label;\n  };\n\n  const handleChange = (targetKey: string, value: string) => {\n    setNewMovie((prev) => {\n      const movieKey = targetKey as MovieField;\n      const movieCopy = { ...prev };\n\n      movieCopy[movieKey] = value;\n\n      return movieCopy;\n    });\n  };\n\n  const handleAdd = (e: React.MouseEvent) => {\n    e.preventDefault();\n    onAdd(newMovie);\n    setCount(prev => prev + 1);\n    setNewMovie(emptyMovie);\n  };\n\n  const validateCustom = ({ dataset, value }: HTMLInputElement) => {\n    const targetKey = dataset.cy?.split('-')[1];\n\n    // write custom requirements\n    switch (targetKey) {\n      case MovieField.imdbUrl:\n      case MovieField.imgUrl:\n        return !!value.match(PATTERN);\n      default:\n        return true;\n    }\n  };\n\n  return (\n    <form className=\"NewMovie\" key={count}>\n      <h2 className=\"title\">Add a movie</h2>\n\n      {Object.entries(newMovie).map(([key, value]) => {\n        const label = generateLabel(key);\n\n        return (\n          <TextField\n            key={key}\n            name={key}\n            label={label}\n            value={value}\n            onChange={(newValue) => handleChange(key, newValue)}\n            required={key !== MovieField.description}\n            validateCustom={validateCustom}\n          />\n        );\n      })}\n\n      <div className=\"field is-grouped\">\n        <div className=\"control\">\n          <button\n            type=\"submit\"\n            data-cy=\"submit-button\"\n            className=\"button is-link\"\n            disabled={isAddDisabled}\n            onClick={handleAdd}\n          >\n            Add\n          </button>\n        </div>\n      </div>\n    </form>\n  );\n};\n","// eslint-disable-next-line\nexport const PATTERN = /^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@,.\\w_]*)#?(?:[,.!/\\\\\\w]*))?)$/;\n","import './App.scss';\nimport { useState } from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\nimport { Movie } from './types/Movie';\n\nexport const App: React.FC = () => {\n  const [moviesToRender, setMoviesToRender] = useState(moviesFromServer);\n\n  const onAdd = (movie: Movie) => {\n    setMoviesToRender(prev => ([...prev, movie]));\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={moviesToRender} />\n      </div>\n      <div className=\"sidebar\">\n        <NewMovie onAdd={onAdd} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}